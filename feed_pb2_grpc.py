# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import feed_pb2 as feed__pb2


class FeedStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Echo = channel.unary_unary(
                '/fr24.feed.api.v1.Feed/Echo',
                request_serializer=feed__pb2.Ping.SerializeToString,
                response_deserializer=feed__pb2.Pong.FromString,
                )
        self.LiveFeed = channel.unary_unary(
                '/fr24.feed.api.v1.Feed/LiveFeed',
                request_serializer=feed__pb2.LiveFeedRequest.SerializeToString,
                response_deserializer=feed__pb2.LiveFeedResponse.FromString,
                )
        self.Playback = channel.unary_unary(
                '/fr24.feed.api.v1.Feed/Playback',
                request_serializer=feed__pb2.PlaybackRequest.SerializeToString,
                response_deserializer=feed__pb2.PlaybackResponse.FromString,
                )
        self.NearestFlights = channel.unary_unary(
                '/fr24.feed.api.v1.Feed/NearestFlights',
                request_serializer=feed__pb2.NearestFlightsRequest.SerializeToString,
                response_deserializer=feed__pb2.NearestFlightsResponse.FromString,
                )
        self.LiveFlightsStatus = channel.unary_unary(
                '/fr24.feed.api.v1.Feed/LiveFlightsStatus',
                request_serializer=feed__pb2.LiveFlightsStatusRequest.SerializeToString,
                response_deserializer=feed__pb2.LiveFlightsStatusResponse.FromString,
                )
        self.FetchSearchIndex = channel.unary_unary(
                '/fr24.feed.api.v1.Feed/FetchSearchIndex',
                request_serializer=feed__pb2.FetchSearchIndexRequest.SerializeToString,
                response_deserializer=feed__pb2.FetchSearchIndexResponse.FromString,
                )


class FeedServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Echo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LiveFeed(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Playback(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NearestFlights(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LiveFlightsStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchSearchIndex(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FeedServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Echo': grpc.unary_unary_rpc_method_handler(
                    servicer.Echo,
                    request_deserializer=feed__pb2.Ping.FromString,
                    response_serializer=feed__pb2.Pong.SerializeToString,
            ),
            'LiveFeed': grpc.unary_unary_rpc_method_handler(
                    servicer.LiveFeed,
                    request_deserializer=feed__pb2.LiveFeedRequest.FromString,
                    response_serializer=feed__pb2.LiveFeedResponse.SerializeToString,
            ),
            'Playback': grpc.unary_unary_rpc_method_handler(
                    servicer.Playback,
                    request_deserializer=feed__pb2.PlaybackRequest.FromString,
                    response_serializer=feed__pb2.PlaybackResponse.SerializeToString,
            ),
            'NearestFlights': grpc.unary_unary_rpc_method_handler(
                    servicer.NearestFlights,
                    request_deserializer=feed__pb2.NearestFlightsRequest.FromString,
                    response_serializer=feed__pb2.NearestFlightsResponse.SerializeToString,
            ),
            'LiveFlightsStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.LiveFlightsStatus,
                    request_deserializer=feed__pb2.LiveFlightsStatusRequest.FromString,
                    response_serializer=feed__pb2.LiveFlightsStatusResponse.SerializeToString,
            ),
            'FetchSearchIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchSearchIndex,
                    request_deserializer=feed__pb2.FetchSearchIndexRequest.FromString,
                    response_serializer=feed__pb2.FetchSearchIndexResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'fr24.feed.api.v1.Feed', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Feed(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Echo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fr24.feed.api.v1.Feed/Echo',
            feed__pb2.Ping.SerializeToString,
            feed__pb2.Pong.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LiveFeed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fr24.feed.api.v1.Feed/LiveFeed',
            feed__pb2.LiveFeedRequest.SerializeToString,
            feed__pb2.LiveFeedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Playback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fr24.feed.api.v1.Feed/Playback',
            feed__pb2.PlaybackRequest.SerializeToString,
            feed__pb2.PlaybackResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NearestFlights(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fr24.feed.api.v1.Feed/NearestFlights',
            feed__pb2.NearestFlightsRequest.SerializeToString,
            feed__pb2.NearestFlightsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LiveFlightsStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fr24.feed.api.v1.Feed/LiveFlightsStatus',
            feed__pb2.LiveFlightsStatusRequest.SerializeToString,
            feed__pb2.LiveFlightsStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FetchSearchIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fr24.feed.api.v1.Feed/FetchSearchIndex',
            feed__pb2.FetchSearchIndexRequest.SerializeToString,
            feed__pb2.FetchSearchIndexResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
