syntax = "proto3";
import "google/protobuf/field_mask.proto";

package fr24.feed.api.v1;

option cc_enable_arenas = true;

message LiveFeedRequest {
  optional LocationBoundaries bounds = 1;
  optional VisibilitySettings settings = 2;
  repeated Filter filters = 3;
  repeated string fleets = 4;
  optional bool highlight_mode = 5;
  optional bool stats = 6;
  optional uint32 limit = 7;
  optional uint32 maxage = 8;
  optional RestrictionVisibility restriction_mode = 9;
  google.protobuf.FieldMask field_mask = 10;
  repeated fixed32 selected_flight_ids = 11;
}

enum RestrictionVisibility {
  NOT_VISIBLE = 0;
  RESTRICTED_INCLUDED = 1;
  RESTRICTED_ONLY = 2;
}

message VisibilitySettings {
  repeated DataSource sources = 1;
  repeated Service services = 2;
  optional TrafficType traffic_type = 3;
}

message PlaybackRequest {
  optional LiveFeedRequest live_feed_request = 1;
  optional uint64 timestamp = 2;
  optional uint64 prefetch = 3;
  optional bool hfreq = 4;
}

message LiveFlightsStatusRequest {
  repeated fixed32 flight_ids = 1;
}

enum TrafficType {
  NONE = 0;
  GROUND_ONLY = 1;
  AIRBORNE_ONLY = 2;
  ALL = 3;
}

message LiveFeedResponse {
  repeated Flight flights = 1;
  optional Stats stats = 2;
  repeated Flight selected_flights = 3;
}

message PlaybackResponse {
  optional LiveFeedResponse live_feed_response = 1;
}

message LiveFlightsStatusResponse {
  map<uint64, LiveFlightStatusData> flights = 1;
}

message Geolocation {
  float lat = 1;
  float lon = 2;
}

message NearestFlightsRequest {
  optional Geolocation location = 1;
  optional uint32 radius = 2;
  optional uint32 limit = 3;
}

message NearbyFlight{
  optional Flight flight = 1;
  optional uint32 distance = 2;
}

message NearestFlightsResponse {
  repeated NearbyFlight flights = 1;
}

message FetchSearchIndexRequest {
}

message FlightSearchData{
  optional string reg = 1;
  optional string schd_from = 2;
  optional string schd_to = 3;
  optional string flight = 4;
  optional string operator = 5;
  optional string ac_type = 6;
  optional float lat = 7;
  optional float lon = 8;
  optional string callsign = 9;
  optional uint32 id = 10;
  optional bool restricted = 11;
}

message FetchSearchIndexResponse {
  repeated FlightSearchData flights = 1;
}

enum DataSource {
  ADSB = 0;
  MLAT = 1;
  FLARM = 2;
  FAA = 3;
  ESTIMATED = 4;
  SATELLITE = 5;
  OTHER_DATA_SOURCE = 6;
  UAT = 7;
  SPIDERTRACKS = 8;
  AUS = 9;
}

message Interval {
  optional int32 min = 1;
  optional int32 max = 2;
}

enum Service {
  PASSENGER = 0;
  CARGO = 1;
  MILITARY_AND_GOVERNMENT = 2;
  BUSINESS_JETS = 3;
  GENERAL_AVIATION = 4;
  HELICOPTERS = 5;
  LIGHTER_THAN_AIR = 6;
  GLIDERS = 7;
  DRONES = 8;
  GROUND_VEHICLES = 9;
  OTHER_SERVICE = 10;
  NON_CATEGORIZED = 11;
}

enum AirportFilterType {
  BOTH = 0;
  INBOUND = 1;
  OUTBOUND = 2;
}

message AirportFilter {
  // this should be oneof but as of 09.02.2023 grpc-web has issues with oneof
  optional string iata = 1;
  optional uint32 country_id = 2;
  optional AirportFilterType type = 3;
}

enum AirlineFilterType {
  PAINTED_AS = 0;
  OPERATED_BY = 1;
}

message AirlineFilter {
  optional string icao = 1;
  optional AirlineFilterType type = 2;
}

message Filter {
  repeated Interval altitude_ranges = 1;
  repeated Interval speed_ranges = 2;
  repeated AirlineFilter airlines = 3;
  repeated string callsigns = 4;
  repeated string radars = 5;
  repeated string regs = 6;
  repeated AirportFilter airports = 7;
  repeated string flights = 8;
  repeated string types = 9;
  repeated Interval birth_year_ranges = 10;
  repeated uint32 squawks = 11;
}

message LocationBoundaries {
  float north = 1;
  float south = 2;
  float west = 3;
  float east = 4;
}

message Route {
  optional string from = 1;
  optional string to = 2;
}

enum EmergencyStatus {
  NO_EMERGENCY = 0;
  GENERAL_EMERGENCY = 1;
  LIFEGUARD_MEDICAL_EMERGENCY = 2;
  MINIMUM_FUEL = 3;
  NO_COMMUNICATIONS = 4;
  UNLAWFUL_INTERFERENCE = 5;
  DOWNED_AIRCRAFT = 6;
  RESERVED = 7;
};

message EmsAvailability {
  optional bool qnh = 1;
  optional bool amcp = 2;
  optional bool afms = 3;
  optional bool oat = 4;
  optional bool ias = 5;
  optional bool tas = 6;
  optional bool mach = 7;
  optional bool agps = 8;
  optional bool agpsdiff = 9;
  optional bool apflags = 10;
  optional bool wind_dir = 11;
  optional bool wind_spd = 12;
  optional bool rs = 13;
}

message EmsInfo {
  optional int32 qnh = 1;
  optional int32 amcp = 2;
  optional int32 afms = 3;
  optional int32 oat = 4;
  optional int32 ias = 5;
  optional int32 tas = 6;
  optional int32 mach = 7;
  optional int32 agps = 8;
  optional int32 agpsdiff = 9;
  optional int32 apflags = 10;
  optional int32 wind_dir = 11;
  optional int32 wind_spd = 12;
  optional EmergencyStatus rs = 13;
}

message Schedule {
  optional int32 std = 1;
  optional int32 etd = 2;
  optional int32 atd = 3;
  optional int32 sta = 4;
  optional int32 eta = 5;
  optional int32 ata = 6;
}

message ExtraFlightInfo {
  optional string flight = 1;
  optional string reg = 2;
  optional Route route = 3;
  optional string type = 4;
  optional int32 squawk = 5;
  optional int32 vspeed = 6;
  optional string ac_birth_day = 7;
  optional int32 country_of_reg = 8;
  optional Schedule schedule = 9;
  optional uint32 logo_id = 10;
  optional string airspace = 11;
  optional EmsInfo ems_info = 12;
  optional EmsAvailability ems_availability = 13;
}

enum Icon {
  // Note only B738 is out of order compared to FR24 Aircraft Icons spreadsheet
  // to make it a default one
  B738 = 0;
  FGTR = 1;
  ASW20 = 2;
  C206 = 3;
  C303 = 4;
  LJ60 = 5;
  Q300 = 6;
  B736 = 7;
  Fokker100 = 8;
  RJ85 = 9;
  A320 = 10;
  // B738 belongs here
  B757 = 11;
  B767 = 12;
  A3ST = 13;
  MD11 = 14;
  A330 = 15;
  A343 = 16;
  A346 = 17;
  B777 = 18;
  B747 = 19;
  A380 = 20;
  A225 = 21;
  SI2 = 22;
  EC = 23;
  BALL = 24;
  GRND = 25;
  SLEI = 26;
  DRON = 27;
  SAT = 28;
  ISS = 29;
}

enum Status {
  NORMAL = 0;
  BACKGROUND = 1;
  EMERGENCY = 2;
  NOT_AVAILABLE = 3;
  LIVE = 4;
}

message Flight {
  optional uint32 flight_id = 1;
  optional float lat = 2;
  optional float lon = 3;
  optional int32 track = 4;
  optional int32 alt = 5;
  optional int32 speed = 6;
  optional Icon icon = 7;
  optional Status status = 8;
  optional uint64 timestamp = 9;
  optional bool on_ground = 10;
  optional string callsign = 11;
  optional DataSource source = 12;
  optional ExtraFlightInfo extra_info = 13;
}

message LiveFlightStatusData {
  optional float lat = 1;
  optional float lon = 2;
  optional Status status = 3;
  optional uint32 squawk = 4;
}

message SourceStats {
  optional DataSource source = 1;
  optional uint32 count = 2;
}

message Stats {
  repeated SourceStats total = 1;
}

message Ping {
  uint32 a = 1;
  uint32 b = 2;
}

message Pong {
  uint32 c = 1;
}

service Feed {
  rpc Echo (Ping) returns (Pong) {}
  rpc LiveFeed (LiveFeedRequest) returns (LiveFeedResponse) {}
  rpc Playback (PlaybackRequest) returns (PlaybackResponse) {}
  rpc NearestFlights (NearestFlightsRequest) returns (NearestFlightsResponse) {}
  rpc LiveFlightsStatus (LiveFlightsStatusRequest) returns (LiveFlightsStatusResponse) {}
  rpc FetchSearchIndex(FetchSearchIndexRequest) returns (FetchSearchIndexResponse) {}
}